{"version":3,"sources":["assets/logo.png","sound/Erik Satie_20170606_128.mp3","sound/seamusic.mp3","actions/index.js","actions/types.js","components/Header.jsx","components/CompleteImage.jsx","components/IncompleteImage.jsx","components/PhotoBox.jsx","components/CompleteQuote.jsx","components/IncompleteQuote.jsx","components/QuoteBox.jsx","components/Footer.jsx","components/App.jsx","reducers/initialBoxState.js","reducers/index.js","index.js"],"names":["module","exports","togglePlaying","type","connect","state","isPlaying","toggleColor","props","newColor","className","id","role","onClick","aria-label","htmlFor","name","defaultChecked","onChange","boxList","removeImage","payload","url","altTag","numBox","src","alt","IncompleteImage","handleKeyPress","e","key","textInput","fetchImages","setState","toggleClass","showInput","showAdd","this","for","value","placeholder","target","onKeyPress","Component","photoMood","dispatch","a","axios","get","params","client_id","process","query","orientation","response","data","mood","console","log","quoteState","removeQuote","quote","author","IncompleteQuote","showQuote","fetchQuote","showAddButton","filterQuotes","text","length","filteredData","filter","quoteId","Math","floor","random","randomQuote","Footer","logo","window","print","href","rel","App","toggledColor","photoBoxes","map","box","index","quoteBox","Date","isColorToggled","slice","boxes","getBoxes","isSoundPlaying","soundfileBlue","playStatus","Sound","status","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","soundfilePink","initialQuote","combineReducers","action","initialBoxState","urls","regular","alt_description","copy","removeCopy","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.39264bf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.12a0f127.png\";","module.exports = __webpack_public_path__ + \"static/media/Erik Satie_20170606_128.39756aea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/seamusic.df2dcf9d.mp3\";","import axios from 'axios';\n//----------ACTION TYPES--------//\nimport {\n  PLAYING_TOGGLED,\n  COLOR_TOGGLED,\n  FETCH_IMAGE,\n  IMAGE_ERROR,\n  REMOVE_IMAGE,\n  FETCH_QUOTE,\n  QUOTE_ERROR,\n  REMOVE_QUOTE,\n} from './types';\n\nexport const togglePlaying = () => {\n  return {\n    type: PLAYING_TOGGLED,\n  };\n};\n\nexport const toggleColor = () => {\n  return {\n    type: COLOR_TOGGLED,\n  };\n};\n\nconst key = process.env.REACT_APP_KEY;\n\nexport const fetchImages = (photoMood, id) => async (dispatch) => {\n  try {\n    const response = await axios.get('https://api.unsplash.com/photos/random', {\n      params: {\n        client_id: key,\n        query: photoMood,\n        orientation: 'squarish',\n      },\n    });\n    dispatch({\n      type: FETCH_IMAGE,\n      payload: {\n        data: response.data,\n        mood: photoMood,\n        id,\n      },\n    });\n  } catch (e) {\n    dispatch({\n      type: IMAGE_ERROR,\n      payload: console.log(e),\n    });\n  }\n};\n\nexport const removeImage = (id) => {\n  return {\n    type: REMOVE_IMAGE,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const fetchQuote = () => async (dispatch) => {\n  try {\n    const response = await axios.get('https://type.fit/api/quotes', { params: {} });\n    const filterQuotes = function (text) {\n      return text.text.length < 50;\n    };\n    const filteredData = response.data.filter(filterQuotes);\n    const quoteId = Math.floor(Math.random() * filteredData.length);\n    const randomQuote = filteredData[quoteId].text;\n    const author = filteredData[quoteId].author;\n    dispatch({\n      type: FETCH_QUOTE,\n      payload: {\n        quote: randomQuote,\n        author: author,\n      },\n    });\n  } catch (e) {\n    dispatch({\n      type: QUOTE_ERROR,\n      payload: console.log(e),\n    });\n  }\n};\n\nexport const removeQuote = () => {\n  return {\n    type: REMOVE_QUOTE,\n  };\n};\n","//----------ACTION TYPES--------//\nexport const PLAYING_TOGGLED = 'PLAYING_TOGGLED';\nexport const COLOR_TOGGLED = 'COLOR_TOGGLED';\nexport const FETCH_IMAGE = 'FETCH_IMAGES';\nexport const IMAGE_ERROR = 'IMAGE_ERROR';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const FETCH_QUOTE = 'FETCH_QUOTE';\nexport const QUOTE_ERROR = 'QUOTE_ERROR';\nexport const REMOVE_QUOTE = 'REMOVE_QUOTE';\n","import React from 'react';\n//----------ICONS--------//\nimport { FaPlayCircle, FaPauseCircle } from 'react-icons/fa';\n//----------REDUX--------//\nimport { connect } from 'react-redux';\nimport { togglePlaying } from '../actions';\nimport { toggleColor } from '../actions';\n\nfunction Header(props) {\n  const { newColor, togglePlaying, toggleColor, isPlaying } = props;\n  return (\n    <header className={`header ${newColor}`} id=\"header\" role=\"banner\">\n      <div className=\"wrapper\">\n        <nav className=\"navBar\">\n          <div className=\"logo\">\n            <h1>MOODY</h1>\n            <div className=\"palette\">\n              <div className={`colorOne ${newColor}`}></div>\n              <div className={`colorTwo ${newColor}`}></div>\n              <div className={`colorThree ${newColor}`}></div>\n            </div>\n          </div>\n          <div className=\"rightNav\">\n            <button\n              className=\"pauseButton\"\n              onClick={togglePlaying}\n              aria-label=\"Play or Pause Audio\"\n            >\n              {isPlaying ? <FaPauseCircle /> : <FaPlayCircle />}\n            </button>\n            <label className=\"switch\">\n              <label htmlFor=\"switchColor\" className=\"sr-only\">\n                Switch Color Theme\n              </label>\n              <input\n                id=\"switchColor\"\n                name=\"switchColor\"\n                type=\"checkbox\"\n                defaultChecked\n                onChange={toggleColor}\n              />\n\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isPlaying: state.isPlaying,\n  };\n};\n\nexport default connect(mapStateToProps, { togglePlaying, toggleColor })(Header);\n","import React from 'react';\n//----------REDUX--------//\nimport { connect } from 'react-redux';\nimport { removeImage } from '../actions';\n\nfunction CompleteImage(props) {\n  const { url, altTag, removeImage, numBox } = props;\n  return (\n    <div className=\"imagePlace imageEmpty\">\n      <label htmlFor=\"closeButton\" className=\"sr-only\">\n        Close the content\n      </label>\n      <button\n        id=\"closeButton\"\n        className=\"closeButton\"\n        onClick={() => removeImage(numBox)}\n        aria-label=\"Close the content\"\n      >\n        <i className=\"fas fa-times\"></i>\n      </button>\n      <img src={url} alt={altTag} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boxList: state.boxList,\n  };\n};\n\nexport default connect(mapStateToProps, { removeImage })(CompleteImage);\n","import React, { Component } from 'react';\n//----------REDUX--------//\nimport { connect } from 'react-redux';\nimport { fetchImages } from '../actions';\n\nclass IncompleteImage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showInput: false,\n      showAdd: true,\n      textInput: '',\n    };\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      if (!this.state.textInput) return;\n      this.props.fetchImages(this.state.textInput, this.props.numBox);\n      this.setState({ textInput: '' });\n    }\n  };\n\n  toggleClass = () => {\n    this.setState({\n      ...this.state,\n      showInput: !this.state.showInput,\n      showAdd: !this.state.showAdd,\n    });\n  };\n\n  render() {\n    const { newColor, numBox } = this.props;\n    return (\n      <div className={`imagePlace ${newColor}`}>\n        {this.state.showInput && (\n          <>\n            <label for=\"moodInput\" className=\"sr-only\">\n              Word describing your mood\n            </label>\n            <input\n              id=\"moodInput\"\n              className=\"moodInput\"\n              type=\"text\"\n              value={this.state.textInput}\n              placeholder=\"Your mood\"\n              onChange={(e) => this.setState({ textInput: e.target.value })}\n              onKeyPress={this.handleKeyPress}\n            />\n          </>\n        )}\n        {this.state.showAdd && (\n          <label htmlFor={`addButton ${numBox}`}>\n            <button\n              id={`addButton ${numBox}`}\n              className=\"addButton\"\n              onClick={this.toggleClass}\n              aria-label=\"Make input field appear\"\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n          </label>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boxList: state.boxList,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchImages })(IncompleteImage);\n","import React from 'react';\n//----------COMPONENTS--------//\nimport CompleteImage from './CompleteImage';\nimport IncompleteImage from './IncompleteImage';\n//----------REDUX--------//\nimport { connect } from 'react-redux';\n\nfunction PhotoBox(props) {\n  const { mood, numBox, url, altTag, newColor } = props;\n  return (\n    <div className=\"frame\">\n      <div className=\"innerFrame\">\n        {mood || url ? (\n          <CompleteImage\n            mood={mood}\n            url={url}\n            altTag={altTag}\n            numBox={numBox}\n            newColor={newColor}\n          />\n        ) : (\n          <IncompleteImage numBox={numBox} newColor={newColor} />\n        )}\n        <div className=\"icons\">\n          <div className=\"leftIcons\">\n            <i className=\"far fa-heart\"></i>\n            <i className=\"far fa-paper-plane\"></i>\n            <i className=\"far fa-comment\"></i>\n          </div>\n          <i className=\"far fa-bookmark\"></i>\n        </div>\n        {mood && <p className=\"moodTitle\">{mood}</p>}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boxList: state.boxList,\n  };\n};\n\nexport default connect(mapStateToProps, null)(PhotoBox);\n","import React from 'react';\n//----------REDUX--------//\nimport { removeQuote } from '../actions';\nimport { connect } from 'react-redux';\n\nfunction CompleteQuote(props) {\n  const { newColor, removeQuote } = props;\n  const { quote, author } = props.quoteState;\n  return (\n    <div className={`imagePlace ${newColor}`}>\n      <label htmlFor=\"closeButton\" className=\"sr-only\">\n        Close the content\n      </label>\n      <button\n        id=\"closeButton\"\n        className=\"closeButton\"\n        onClick={removeQuote}\n        aria-label=\"Close the content\"\n      >\n        <i className=\"fas fa-times\"></i>\n      </button>\n      <p className=\"randomQuote\">{quote}</p>\n      <p className=\"quoteAuthor\">{author}</p>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quoteState: state.quoteState,\n  };\n};\n\nexport default connect(mapStateToProps, { removeQuote })(CompleteQuote);\n","import React, { Component } from 'react';\n//----------REDUX--------//\nimport { fetchQuote } from '../actions';\nimport { connect } from 'react-redux';\n\nclass IncompleteQuote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showAddButton: true,\n    };\n  }\n\n  showQuote = () => {\n    this.props.fetchQuote();\n    this.setState({\n      showAddButton: !this.state.showAddButton,\n    });\n  };\n\n  render() {\n    return (\n      <div className={`imagePlace ${this.props.newColor}`}>\n        {this.state.showAddButton && (\n          <label htmlFor=\"addButton\">\n            <button\n              id=\"addButton\"\n              className=\"addButton\"\n              onClick={this.showQuote}\n              aria-label=\"Make input field appear\"\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n          </label>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quoteState: state.quoteState,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchQuote })(IncompleteQuote);\n","import React from 'react';\n//----------COMPONENTS--------//\nimport CompleteQuote from './CompleteQuote';\nimport IncompleteQuote from './IncompleteQuote';\n//----------REDUX--------//\nimport { connect } from 'react-redux';\n\nfunction QuoteBox(props) {\n  const { newColor } = props;\n\n  return (\n    <div className=\"frame\">\n      <div className=\"innerFrame\">\n        {props.quoteState.quote ? (\n          <CompleteQuote newColor={newColor} />\n        ) : (\n          <IncompleteQuote newColor={newColor} />\n        )}\n        <div className=\"icons\">\n          <div className=\"leftIcons\">\n            <i className=\"far fa-heart\"></i>\n            <i className=\"far fa-paper-plane\"></i>\n            <i className=\"far fa-comment\"></i>\n          </div>\n          <i className=\"far fa-bookmark\"></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quoteState: state.quoteState,\n  };\n};\n\nexport default connect(mapStateToProps, null)(QuoteBox);\n","import React from 'react';\n//----------LOCAL FILES--------//\nimport logo from '../assets/logo.png';\n\nfunction Footer(props) {\n  const handlePrint = () => {\n    window.print();\n  };\n\n  return (\n    <footer role=\"contentinfo\" className={`footer ${props.newColor}`} id=\"footer\">\n      <div className=\"wrapper\">\n        <div className=\"footerFlex\">\n          <div>\n            <img className=\"footerLogo\" src={logo} alt=\"logo\" />\n          </div>\n          <ul className=\"socialIcons\">\n            <li>\n              <label htmlFor=\"printButton\">\n                <button\n                  id=\"printButton\"\n                  className=\"print\"\n                  onClick={handlePrint}\n                  aria-label=\"Print the page\"\n                >\n                  <i className=\"fas fa-print\"></i>\n                </button>\n              </label>\n            </li>\n            <li>\n              <a\n                href=\"https://github.com/OksanaSam\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"GitHub account\"\n              >\n                <i className=\"fab fa-github\"></i>\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.linkedin.com/in/oksana-samokhvalova-6b03521b0/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"LinkedIn account\"\n              >\n                <i className=\"fab fa-linkedin-in\"></i>\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://twitter.com/oksanadev\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"Twitter Account\"\n              >\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://open.spotify.com/playlist/2M9DHDbmG4bGKzeyL2auAq\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"Spotify playlist\"\n              >\n                <i className=\"fab fa-spotify\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <p className=\"copyright\">© 2020 Oksana Samokhvalova</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n//----------COMPONENTS--------//\nimport Header from './Header';\nimport PhotoBox from './PhotoBox';\nimport QuoteBox from './QuoteBox';\nimport Footer from './Footer';\n//----------STYLES--------//\nimport '../styles/App.css';\n//----------LOCAL FILES--------//\nimport soundfilePink from '../sound/Erik Satie_20170606_128.mp3';\nimport soundfileBlue from '../sound/seamusic.mp3';\n//----------LIBRARIES--------//\nimport Sound from 'react-sound';\n//----------REDUX--------//\nimport { connect } from 'react-redux';\nimport { togglePlaying } from '../actions';\n\nclass App extends Component {\n  getBoxes(toggledColor) {\n    const photoBoxes = this.props.boxList.map((box, index) => (\n      <PhotoBox\n        key={index}\n        mood={box.mood}\n        url={box.url}\n        altTag={box.alt}\n        numBox={index}\n        newColor={toggledColor}\n      />\n    ));\n    const quoteBox = (\n      <QuoteBox\n        key={new Date()}\n        newColor={this.props.isColorToggled ? 'ToggledClass' : 'NotToggledClass'}\n      />\n    );\n    return [photoBoxes[0], quoteBox, ...photoBoxes.slice(1)];\n  }\n\n  render() {\n    const { isColorToggled, isPlaying } = this.props;\n    const newColor = isColorToggled ? 'ToggledClass' : 'NotToggledClass';\n    const boxes = this.getBoxes(newColor);\n    const isSoundPlaying = isPlaying ? 'PLAYING' : 'PAUSED';\n\n    return (\n      <>\n        {isColorToggled ? (\n          <Sound\n            url={soundfileBlue}\n            playStatus={Sound.status[isSoundPlaying]}\n            onLoading={this.handleSongLoading}\n            onPlaying={this.handleSongPlaying}\n            onFinishedPlaying={this.handleSongFinishedPlaying}\n          />\n        ) : (\n          <Sound\n            url={soundfilePink}\n            playStatus={Sound.status[isSoundPlaying]}\n            onLoading={this.handleSongLoading}\n            onPlaying={this.handleSongPlaying}\n            onFinishedPlaying={this.handleSongFinishedPlaying}\n          />\n        )}\n        <Header newColor={newColor} />\n        <main role=\"main\" className={`mainContainer ${newColor}`}>\n          <div className=\"wrapper\">\n            <div className=\"mainGrid\" id=\"mainGrid\">\n              {boxes}\n            </div>\n          </div>\n        </main>\n        <Footer newColor={newColor} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isPlaying: state.isPlaying,\n    isColorToggled: state.isColorToggled,\n    boxList: state.boxList,\n  };\n};\n\nexport default connect(mapStateToProps, { togglePlaying })(App);\n","export default [\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n];\n","import { combineReducers } from 'redux';\nimport initialBoxState from './initialBoxState';\n//----------ACTION TYPES--------//\nimport {\n  PLAYING_TOGGLED,\n  COLOR_TOGGLED,\n  FETCH_IMAGE,\n  REMOVE_IMAGE,\n  FETCH_QUOTE,\n  REMOVE_QUOTE,\n} from '../actions/types';\n\n//----------PLAY SOUND REDUCER--------//\nconst playSoundReducer = (state = true, action) => {\n  switch (action.type) {\n    case PLAYING_TOGGLED:\n      return !state;\n    default:\n      return state;\n  }\n};\n\n//----------TOGGLE COLOR REDUCER--------//\nconst toggleColorReducer = (state = false, action) => {\n  switch (action.type) {\n    case COLOR_TOGGLED:\n      return !state;\n    default:\n      return state;\n  }\n};\n\n//----------BOX LIST REDUCER--------//\nconst boxListReducer = (state = initialBoxState, action) => {\n  switch (action.type) {\n    case FETCH_IMAGE:\n      const { data, mood, id } = action.payload;\n      const url = data.urls.regular;\n      const altTag = data.alt_description;\n      const copy = [...state];\n      copy[id] = {\n        url: url,\n        mood,\n        alt: altTag,\n      };\n      return copy;\n    case REMOVE_IMAGE:\n      const removeCopy = [...state];\n      removeCopy[action.payload.id] = {\n        url: '',\n        mood: '',\n        alt: '',\n      };\n      return removeCopy;\n    default:\n      return state;\n  }\n};\n\n//----------QUOTE REDUCER--------//\nconst initialQuote = { quote: '', author: '' };\n\nconst quoteReducer = (state = initialQuote, action) => {\n  switch (action.type) {\n    case FETCH_QUOTE:\n      return action.payload;\n    case REMOVE_QUOTE:\n      return initialQuote;\n    default:\n      return state;\n  }\n};\n\n//----------COMBINING REDUCERS--------//\nexport default combineReducers({\n  isPlaying: playSoundReducer,\n  isColorToggled: toggleColorReducer,\n  boxList: boxListReducer,\n  quoteState: quoteReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n//----------REDUX--------//\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n//----------REACT AXE--------//\nconst config = {\n  rules: [\n    {\n      id: 'radiogroup',\n      enabled: true,\n    },\n  ],\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000, config);\n}\n//--------------------------//\n\nReactDOM.render(\n  <Provider store={createStore(reducers, applyMiddleware(thunk))}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}