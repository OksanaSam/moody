{"version":3,"sources":["assets/logo.png","sound/Erik Satie_20170606_128.mp3","sound/seamusic.mp3","initialState.js","components/Header.jsx","components/CompleteImage.jsx","components/IncompleteImage.jsx","components/PhotoBox.jsx","components/CompleteQuote.jsx","components/IncompleteQuote.jsx","components/QuoteBox.jsx","components/Footer.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","url","mood","alt","Header","newColor","isPlaying","handlePause","handleToggle","className","id","role","onClick","htmlFor","name","type","defaultChecked","onChange","CompleteImage","props","removeImages","numBox","aria-label","src","altTag","IncompleteImage","handleKeyPress","e","key","state","textInput","getImages","setState","toggleClass","showInput","showAdd","bind","this","for","value","placeholder","target","onKeyPress","Component","PhotoBox","CompleteQuote","removeQuote","quote","author","IncompleteQuote","getQuote","QuoteBox","Footer","logo","window","print","href","rel","App","isToggled","process","photoMood","a","axios","method","responseType","params","client_id","query","orientation","response","data","urls","regular","alt_description","copy","boxList","alert","filterQuotes","text","length","filteredData","filter","quoteId","Math","floor","random","randomQuote","initialState","toggledColor","photoBoxes","map","box","index","quoteBox","Date","slice","boxes","getBoxes","soundfileBlue","playStatus","Sound","status","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","soundfilePink","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a27e0c76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.12a0f127.png\";","module.exports = __webpack_public_path__ + \"static/media/Erik Satie_20170606_128.39756aea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/seamusic.df2dcf9d.mp3\";","export default [\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n  {\n    url: '',\n    mood: '',\n    alt: '',\n  },\n];\n","import React from 'react';\nimport { FaPlayCircle, FaPauseCircle } from 'react-icons/fa';\n\nfunction Header({ newColor, isPlaying, handlePause, handleToggle }) {\n  return (\n    <header className={`header ${newColor}`} id=\"header\" role=\"banner\">\n      <div className=\"wrapper\">\n        <nav className=\"navBar\">\n          <div className=\"logo\">\n            <h1>MOODY</h1>\n            <div className=\"palette\">\n              <div className={`colorOne ${newColor}`}></div>\n              <div className={`colorTwo ${newColor}`}></div>\n              <div className={`colorThree ${newColor}`}></div>\n            </div>\n          </div>\n          <div className=\"rightNav\">\n            <button className=\"pauseButton\" onClick={handlePause}>\n              {isPlaying ? <FaPauseCircle /> : <FaPlayCircle />}\n            </button>\n            <label className=\"switch\">\n              <label htmlFor=\"switchColor\" className=\"sr-only\">\n                Switch Color Theme\n              </label>\n              <input\n                id=\"switchColor\"\n                name=\"switchColor\"\n                type=\"checkbox\"\n                defaultChecked\n                onChange={handleToggle}\n              />\n\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction CompleteImage(props) {\n  const handleClick = () => {\n    props.removeImages(props.numBox);\n  };\n\n  return (\n    <div className=\"imagePlace imageEmpty\">\n      <label htmlFor=\"closeButton\" className=\"sr-only\">\n        Close the content\n      </label>\n      <button\n        id=\"closeButton\"\n        className=\"closeButton\"\n        onClick={handleClick}\n        aria-label=\"Close the content\"\n      >\n        <i className=\"fas fa-times\"></i>\n      </button>\n      <img src={props.url} alt={props.altTag} />\n    </div>\n  );\n}\n\nexport default CompleteImage;\n","import React, { Component } from 'react';\n\nclass IncompleteImage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showInput: false,\n      showAdd: true,\n      textInput: '',\n    };\n\n    this.toggleClass = this.toggleClass.bind(this);\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      if (!this.state.textInput) return;\n      this.props.getImages(this.state.textInput, this.props.numBox);\n      this.setState({ textInput: '' });\n    }\n  };\n\n  toggleClass = () => {\n    this.setState({\n      showInput: !this.state.showInput,\n      showAdd: !this.state.showAdd,\n    });\n  };\n\n  render() {\n    return (\n      <div className={`imagePlace ${this.props.newColor}`}>\n        {this.state.showInput && (\n          <>\n            <label for=\"moodInput\" className=\"sr-only\">\n              Word describing your mood\n            </label>\n            <input\n              id=\"moodInput\"\n              className=\"moodInput\"\n              type=\"text\"\n              value={this.state.textInput}\n              placeholder=\"Your mood\"\n              onChange={(e) => this.setState({ textInput: e.target.value })}\n              onKeyPress={this.handleKeyPress}\n            />\n          </>\n        )}\n        {this.state.showAdd && (\n          <label htmlFor=\"addButton\">\n            <button\n              id=\"addButton\"\n              className=\"addButton\"\n              onClick={this.toggleClass}\n              aria-label=\"Make input field appear\"\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n          </label>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default IncompleteImage;\n","import React from 'react';\nimport CompleteImage from './CompleteImage';\nimport IncompleteImage from './IncompleteImage';\n\nfunction PhotoBox(props) {\n  return (\n    <div className=\"frame\">\n      <div className=\"innerFrame\">\n        {props.mood || props.url ? (\n          <CompleteImage\n            mood={props.mood}\n            url={props.url}\n            altTag={props.altTag}\n            numBox={props.numBox}\n            removeImages={props.removeImages}\n            newColor={props.newColor}\n          />\n        ) : (\n          <IncompleteImage\n            getImages={props.getImages}\n            numBox={props.numBox}\n            newColor={props.newColor}\n          />\n        )}\n        <div className=\"icons\">\n          <div className=\"leftIcons\">\n            <i className=\"far fa-heart\"></i>\n            <i className=\"far fa-paper-plane\"></i>\n            <i className=\"far fa-comment\"></i>\n          </div>\n          <i className=\"far fa-bookmark\"></i>\n        </div>\n        {props.mood && <p className=\"moodTitle\">{props.mood}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoBox;\n","import React from 'react';\n\nfunction CompleteQuote(props) {\n  const handleClick = () => {\n    props.removeQuote();\n  };\n  return (\n    <div className={`imagePlace ${props.newColor}`}>\n      <label htmlFor=\"closeButton\" className=\"sr-only\">\n        Close the content\n      </label>\n      <button\n        id=\"closeButton\"\n        className=\"closeButton\"\n        onClick={handleClick}\n        aria-label=\"Close the content\"\n      >\n        <i className=\"fas fa-times\"></i>\n      </button>\n      <p className=\"randomQuote\">{props.quote}</p>\n      <p className=\"quoteAuthor\">{props.author}</p>\n    </div>\n  );\n}\n\nexport default CompleteQuote;\n","import React, { Component } from 'react';\n\nclass IncompleteQuote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showAdd: true,\n    };\n    this.toggleClass = this.toggleClass.bind(this);\n  }\n\n  toggleClass = () => {\n    this.props.getQuote();\n    this.setState({\n      showAdd: !this.state.showAdd,\n    });\n  };\n\n  render() {\n    return (\n      <div className={`imagePlace ${this.props.newColor}`}>\n        {this.state.showAdd && (\n          <label htmlFor=\"addButton\">\n            <button\n              id=\"addButton\"\n              className=\"addButton\"\n              onClick={this.toggleClass}\n              aria-label=\"Make input field appear\"\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n          </label>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default IncompleteQuote;\n","import React from 'react';\nimport CompleteQuote from './CompleteQuote';\nimport IncompleteQuote from './IncompleteQuote';\n\nfunction QuoteBox(props) {\n  return (\n    <div className=\"frame\">\n      <div className=\"innerFrame\">\n        {props.quote ? (\n          <CompleteQuote\n            quote={props.quote}\n            author={props.author}\n            removeQuote={props.removeQuote}\n            newColor={props.newColor}\n          />\n        ) : (\n          <IncompleteQuote getQuote={props.getQuote} newColor={props.newColor} />\n        )}\n        <div className=\"icons\">\n          <div className=\"leftIcons\">\n            <i className=\"far fa-heart\"></i>\n            <i className=\"far fa-paper-plane\"></i>\n            <i className=\"far fa-comment\"></i>\n          </div>\n          <i className=\"far fa-bookmark\"></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuoteBox;\n","import React from 'react';\nimport logo from '../assets/logo.png';\n\nfunction Footer(props) {\n  const handlePrint = () => {\n    window.print();\n  };\n\n  return (\n    <footer role=\"contentinfo\" className={`footer ${props.newColor}`} id=\"footer\">\n      <div className=\"wrapper\">\n        <div className=\"footerFlex\">\n          <div>\n            <img className=\"footerLogo\" src={logo} alt=\"logo\" />\n          </div>\n          <ul className=\"socialIcons\">\n            <li>\n              <label htmlFor=\"printButton\">\n                <button\n                  id=\"printButton\"\n                  className=\"print\"\n                  onClick={handlePrint}\n                  aria-label=\"Print the page\"\n                >\n                  <i className=\"fas fa-print\"></i>\n                </button>\n              </label>\n            </li>\n            <li>\n              <a\n                href=\"https://github.com/OksanaSam\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"GitHub account\"\n              >\n                <i className=\"fab fa-github\"></i>\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.linkedin.com/in/oksana-samokhvalova-6b03521b0/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"LinkedIn account\"\n              >\n                <i className=\"fab fa-linkedin-in\"></i>\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://twitter.com/oksanadev\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"Twitter Account\"\n              >\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://open.spotify.com/playlist/2M9DHDbmG4bGKzeyL2auAq\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label=\"Spotify playlist\"\n              >\n                <i className=\"fab fa-spotify\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <p className=\"copyright\">© 2020 Oksana Samokhvalova</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport initialState from '../initialState';\nimport Header from './Header';\nimport PhotoBox from './PhotoBox';\nimport QuoteBox from './QuoteBox';\nimport Footer from './Footer';\nimport '../styles/App.css';\nimport soundfilePink from '../sound/Erik Satie_20170606_128.mp3';\nimport soundfileBlue from '../sound/seamusic.mp3';\nimport Sound from 'react-sound';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //initial state is stored in a separate file\n      boxList: initialState,\n      quote: '',\n      author: '',\n      isToggled: false,\n      isPlaying: true,\n    };\n  }\n\n  handleToggle = () => {\n    this.setState({\n      ...this.state,\n      isToggled: !this.state.isToggled,\n    });\n  };\n\n  getBoxes(toggledColor) {\n    const photoBoxes = this.state.boxList.map((box, index) => (\n      <PhotoBox\n        key={index}\n        mood={box.mood}\n        url={box.url}\n        altTag={box.alt}\n        numBox={index}\n        getImages={this.getImages}\n        removeImages={this.removeImages}\n        newColor={toggledColor}\n      />\n    ));\n    const quoteBox = (\n      <QuoteBox\n        key={new Date()}\n        quote={this.state.quote}\n        author={this.state.author}\n        removeQuote={this.removeQuote}\n        getQuote={this.getQuote}\n        newColor={this.state.isToggled ? 'ToggledClass' : 'NotToggledClass'}\n      />\n    );\n    return [photoBoxes[0], quoteBox, ...photoBoxes.slice(1)];\n  }\n\n  // Getting images from Unsplash API\n\n  key = process.env.REACT_APP_KEY;\n  getImages = async (photoMood, numBox) => {\n    try {\n      let response = await axios({\n        url: 'https://api.unsplash.com/photos/random',\n        method: 'GET',\n        responseType: 'json',\n        params: {\n          client_id: this.key,\n          query: photoMood,\n          orientation: 'squarish',\n        },\n      });\n      let url = response.data.urls.regular;\n      let altTag = response.data.alt_description;\n      const copy = [...this.state.boxList];\n      copy[numBox] = {\n        url: url,\n        mood: photoMood,\n        alt: altTag,\n      };\n      this.setState({\n        boxList: copy,\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  removeImages = (numBox) => {\n    const copy = [...this.state.boxList];\n    copy[numBox] = {\n      url: '',\n      mood: '',\n      alt: '',\n    };\n    this.setState({\n      boxList: copy,\n    });\n  };\n\n  // Getting a random quote from Api\n  getQuote = async () => {\n    try {\n      let response = await axios({\n        url: 'https://type.fit/api/quotes',\n        method: 'GET',\n        responseType: 'json',\n        params: {},\n      });\n      const filterQuotes = function (text) {\n        return text.text.length < 50;\n      };\n      let filteredData = response.data.filter(filterQuotes);\n      let quoteId = Math.floor(Math.random() * filteredData.length);\n      let randomQuote = filteredData[quoteId].text;\n      let author = filteredData[quoteId].author;\n      this.setState({\n        quote: randomQuote,\n        author: author,\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  // Removing the quote from UI\n  removeQuote = () => {\n    this.setState({\n      quote: '',\n      author: '',\n    });\n  };\n\n  handlePause = () => {\n    this.setState({\n      ...this.state,\n      isPlaying: !this.state.isPlaying,\n    });\n  };\n\n  render() {\n    const newColor = this.state.isToggled ? 'ToggledClass' : 'NotToggledClass';\n    const boxes = this.getBoxes(newColor);\n\n    const isPlaying = this.state.isPlaying === true ? 'PLAYING' : 'PAUSED';\n\n    return (\n      <>\n        {this.state.isToggled ? (\n          <Sound\n            url={soundfileBlue}\n            playStatus={Sound.status[isPlaying]}\n            onLoading={this.handleSongLoading}\n            onPlaying={this.handleSongPlaying}\n            onFinishedPlaying={this.handleSongFinishedPlaying}\n          />\n        ) : (\n          <Sound\n            url={soundfilePink}\n            playStatus={Sound.status[isPlaying]}\n            onLoading={this.handleSongLoading}\n            onPlaying={this.handleSongPlaying}\n            onFinishedPlaying={this.handleSongFinishedPlaying}\n          />\n        )}\n        <Header\n          handlePause={this.handlePause}\n          isPlaying={this.state.isPlaying}\n          handleToggle={this.handleToggle}\n          newColor={newColor}\n        />\n        <main role=\"main\" className={`mainContainer ${newColor}`}>\n          <div className=\"wrapper\">\n            <div className=\"mainGrid\" id=\"mainGrid\">\n              {boxes}\n            </div>\n          </div>\n        </main>\n        <Footer newColor={newColor} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nconst config = {\n  rules: [\n    {\n      id: 'radiogroup',\n      enabled: true,\n    },\n  ],\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000, config);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}