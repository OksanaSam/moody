{"version":3,"sources":["logo.png","initialState.js","components/Header.js","components/CompleteImage.js","components/IncompleteImage.js","components/PhotoBox.js","components/PhotoFrame.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","mood","alt","Header","handlePrint","window","print","toggleClass","newClassName","document","getElementById","className","onClick","this","Component","CompleteImage","handleClick","props","removeImages","numBox","console","log","src","altTag","IncompleteImage","handleKeyPress","e","key","moodInput","textInput","current","value","getImages","React","createRef","type","placeholder","ref","onKeyPress","PhotoBox","PhotoFrame","Footer","logo","href","target","aria-label","aria-hidden","App","photoMood","axios","method","responseType","params","client_id","query","orientation","then","data","urls","regular","alt_description","copy","state","boxArray","setState","toggleBox","isBoxVisible","initialState","quote","randomQuote","Math","floor","random","length","text","map","box","index","boxes","getBoxes","id","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a5436166.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.12a0f127.png\";","export default [\n    {\n      url: '',\n      mood: '',\n      alt: ''\n    },\n    {\n      url: '',\n      mood: '',\n      alt: ''\n    },\n    {\n      url: '',\n      mood: '',\n      alt: ''\n    },\n    {\n      url: '',\n      mood: '',\n      alt: ''\n    },\n    {\n      url: 'https://images.unsplash.com/photo-1582623081729-4b43c8956085?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjE0MjAwOX0',\n      mood: 'there',\n      alt: 'hello'\n    },\n    {\n      url: '',\n      mood: '',\n      alt: ''\n    }\n  ];\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n\n    handlePrint = () => {\n        window.print();\n    }\n\n    toggleClass = () => {\n        const oldStyle = document.getElementById('test').className;\n        const newClassName = oldStyle === 'mainGrid' ? 'newMainGrid' : 'mainGrid'\n        document.getElementById('test').className =  newClassName;\n      }\n\n    render() {\n        return (\n            <div className='header'>\n                <div className=\"wrapper\">\n                    <nav className=\"navBar\">\n                        <div className=\"logo\">\n                            <p>MOODY</p>\n                        </div>\n                        <button onClick={this.toggleClass}>Toggle</button>\n                        <ul className=\"hamburger\">\n                        {/* <input type=\"checkbox\" id=\"toggle\" name=\"toggle\"/> */}\n                            \n                        </ul>\n                        <button className=\"print\" onClick={this.handlePrint}><i className=\"fas fa-print\"></i></button>\n                    </nav>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Header;","import React, { Component } from 'react';\n\nclass CompleteImage  extends Component {\n    handleClick = () => {\n        this.props.removeImages(this.props.numBox);\n    };\n    \n    render() {\n        console.log(this.props.mood);\n        return (\n            <div className='completeImage'>\n                <button className=\"closeButton\" onClick={this.handleClick}><i className=\"fas fa-times\"></i></button>\n                {/* <p>{this.props.mood}</p> */}\n                <img src={this.props.url} alt={this.props.altTag}/>\n            </div>\n        );\n    }\n};\n\nexport default CompleteImage;","import React, { Component } from 'react';\n\nclass IncompleteImage extends Component {\n    constructor() {\n        super();\n        this.textInput = React.createRef();\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            let moodInput = this.textInput.current.value;\n            if (!moodInput) return;\n            this.textInput.current.value = '';\n            this.props.getImages(moodInput, this.props.numBox);\n        }\n    };\n\n    render() {\n        return (\n            <div className='incompleteImage'>\n                <input\n                    type=\"text\"\n                    className=\"moodInput\"\n                    placeholder=\"Enter your mood\"\n                    ref={this.textInput}\n                    onKeyPress={this.handleKeyPress}\n                />\n                <p>Incomplete Image</p>\n                <button className=\"addButton\"><i className=\"fas fa-plus\"></i></button>\n            </div>\n        )\n    }\n};\n\nexport default IncompleteImage;","import React, { Component } from 'react';\nimport CompleteImage from './CompleteImage';\nimport IncompleteImage from './IncompleteImage';\n\nclass PhotoBox extends Component {\n    render() {\n        return (\n            <div className='frame'>\n                <div className='innerFrame'>\n                    <div className='imagePlace'>\n                        { this.props.mood || this.props.url ? (\n                            <CompleteImage \n                                mood={this.props.mood}\n                                url={this.props.url}\n                                altTag={this.props.altTag}\n                                numBox={this.props.numBox}\n                                removeImages={this.props.removeImages}\n                            />\n                        ) : <IncompleteImage\n                                getImages={this.props.getImages}\n                                numBox={this.props.numBox}\n                            /> }\n                    </div>\n                    <div className=\"icons\">\n                        <div className=\"leftIcons\">\n                            <i className=\"far fa-heart\"></i>\n                            <i className=\"far fa-paper-plane\"></i>\n                            <i className=\"far fa-comment\"></i>\n                        </div>\n                        <i className=\"far fa-bookmark\"></i>\n                    </div>\n                { this.props.mood && <p className=\"moodTitle\">{this.props.mood}</p> }\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default PhotoBox;","import React, { Component } from 'react';\n\nclass PhotoFrame extends Component {\n    render() {\n        return (\n            <div className=\"photoGrid\">\n                <div className=\"photoBox\"></div>\n                <div className=\"photoBox\"></div>\n                <div className=\"photoBox\"></div>\n                <div className=\"photoBox\"></div>\n                <div className=\"photoBox\"></div>\n                <div className=\"photoBox\"></div>\n            </div>\n        )\n    }\n};\n\nexport default PhotoFrame;","import React, { Component } from 'react';\nimport logo from '../logo.png'; // with import\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <div className=\"wrapper\">\n                    <div className=\"footerFlex\">\n                        <div>\n                            <img className=\"footerLogo\" src={logo} alt=\"logo\" />\n                        </div>\n                        <ul className=\"socialIcons\">\n                            <li><a href=\"https://github.com/OksanaSam\" target=\"_blank\" aria-label=\"GitHub account\"><i aria-hidden=\"true\" className=\"fab fa-github\"></i></a></li>\n                            <li><a href=\"https://www.linkedin.com/in/oksana-samokhvalova-6b03521b0/\" target=\"_blank\" aria-label=\"LinkedIn account\"><i aria-hidden=\"true\" className=\"fab fa-linkedin-in\"></i></a></li>\n                            <li><a href=\"https://twitter.com/oksanadev\" target=\"_blank\" aria-label=\"Twitter Account\"><i aria-hidden=\"true\" className=\"fab fa-twitter\"></i></a></li>\n                            <li><a href=\"https://open.spotify.com/playlist/2M9DHDbmG4bGKzeyL2auAq\" target=\"_blank\" aria-label=\"Spotify playlist\"><i aria-hidden=\"true\" className=\"fab fa-spotify\"></i></a></li>\n                        </ul>\n                    </div>\n                    <p className=\"copyright\">© 2020 Oksana Samokhvalova</p>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport axios from 'axios'; \n// import firebase from './firebase';\nimport initialState from './initialState';\nimport Header from './components/Header';\nimport PhotoBox from './components/PhotoBox';\nimport PhotoFrame from './components/PhotoFrame';\nimport Footer from './components/Footer';\n// import './font-awesome.min.css';\n// import 'font-awesome/css/font-awesome.min.css';\n// import 'font-awesome/css/font-awesome.min.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faTumblr, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport './App.css';\n\n\n// import sweet alerts\n// import Swal from \"sweetalert2\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.textInput = React.createRef();\n    this.state = {\n      //set initial state for Api data\n      boxArray: initialState,\n      quote: '',\n    };\n  }\n\n  // Getting a Random Quote from Api\n  componentDidMount() {\n    axios({\n      url: 'https://type.fit/api/quotes',\n      method: 'GET',\n      responseType: 'json',\n      params: {}\n    }).then(({ data }) => {\n      let quoteId = Math.floor(Math.random() * data.length);\n      let randomQuote = data[quoteId].text;\n      this.setState({\n        quote: randomQuote,\n      })\n    })\n  }\n\n  // getBoxes() {\n  //   const photoBoxes = this.state.boxArray.map(boxIndex => (\n  //     <PhotoBox\n  //         mood={this.state.boxArray[boxIndex]}\n  //         url={this.state.boxArray[boxIndex]}\n  //     />\n  //   ));\n  //   const quoteBox = (\n  //     <PhotoBox\n  //         mood=''\n  //         // url='something'\n  //     />\n  //   );\n  //   return [\n  //     photoBoxes[0],\n  //     quoteBox,\n  //     ...photoBoxes.slice(1),\n  //   ];\n  // }\n\n\n// Toggling Colors\n  toggleClass = () => {\n    const oldStyle = document.getElementById('test').className;\n    const newClassName = oldStyle === 'red' ? 'blue' : 'red'\n    document.getElementById('test').className =  newClassName\n  }\n\n // Getting Images from Unsplash \n  getImages = (photoMood, numBox) => {\n    axios({\n        url: 'https://api.unsplash.com/photos/random',\n        method: 'GET',\n        responseType: 'json',\n        params: {\n            client_id: 'Ro76YKYpmutB58ImuEKT8izDBYKA669WYcjJWz-U6TA',\n            query: photoMood,\n            // count: 10,\n            orientation: 'squarish',\n        },\n    }).then(({ data }) => {\n      let url = data.urls.regular;\n      let altTag = data.alt_description;\n      const copy = [...this.state.boxArray];\n      copy[numBox] = {\n        url:  url,\n        mood: photoMood,\n        alt: altTag\n      };\n\n      this.setState({\n        boxArray: copy,\n      });   \n    });\n  };\n\n  removeImages = (numBox) => {\n    const copy = [...this.state.boxArray];\n    copy[numBox] = {\n      url:  '',\n      mood: '',\n      alt: ''\n    };\n    this.setState({\n      boxArray: copy,\n    });\n  };\n\n  getBoxes() {\n    return this.state.boxArray.map((box, index) => (\n      <PhotoBox\n          key={index}\n          mood={box.mood}\n          url={box.url}\n          altTag={box.alt}\n          numBox={index}\n          getImages={this.getImages}\n          removeImages={this.removeImages}\n      />\n    ));\n  };\n\n  toggleBox = () => {\n    this.setState({\n      isBoxVisible: true\n    })\n  };\n  \n\n  render() {\n    const boxes = this.getBoxes();\n    return (\n      <div>\n        <Header/>\n        <div className=\"mainGrid\" id=\"test\">\n          <div className='wrapper'>\n          <PhotoFrame/>\n          </div>\n          {boxes}\n        </div>\n        <Footer/>\n      </div>\n    )\n  };\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}